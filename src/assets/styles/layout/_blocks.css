/* ---------------------------------------------------------------------
.blocks - Divides content into blocks that wrap
------------------------------------------------------------------------ */
:root {
    --blocks-SPACE: 20px;
}

.blocks {
    display: block; /* IE9 fallback for Flex */
    display: flex; /* Using Flex for equal height containers */
    flex-wrap: wrap; /* Children need to wrap */
    align-items: stretch; /* For equal height */
    font-size: 0; /* Horiontal gap fix for inline-block fallback */
}

.blocks > * {
    box-sizing: border-box;
    display: inline-block; /* IE9 fallback */
    vertical-align: top;
    width: 100%;
    font-size: calc(16 / var(--FONT_BASE_SIZE) * 1rem); /* Converts to rem (font size/base font size), Resetting font-size for horizontal gap fix */
}

/* Loop through layout options
Uses simple variables (postcss-simple-vars) and loops (postcss-for) from PostCSS */
@for $i from 1 to 6 {
    .blocks_$(i)up > * {
        width: calc(1 / $i * 100%);
    }
}

@media (--BP_S) {
    @for $i from 1 to 6 {
        .blocks_$(i)upS > * {
            width: calc(1 / $i * 100%);
        }
    }
}

@media (--BP_M) {
    @for $i from 1 to 6 {
        .blocks_$(i)upM > * {
            width: calc(1 / $i * 100%);
        }
    }
}

/* ---- Mixins ---- */

.mix-blocks_space {
    margin-top: -var(--blocks-SPACE);
    margin-left: -var(--blocks-SPACE);
}

.mix-blocks_space > * {
    padding-top: var(--blocks-SPACE);
    padding-left: var(--blocks-SPACE);
}